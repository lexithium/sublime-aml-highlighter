# [PackageDev] target_format: plist, ext: tmLanguage
---
name: AML
scopeName: source.aml
fileTypes: ["aml", "AML"]
uuid: 48d64183-3530-4807-9398-8b223de13788

patterns:
- comment: Keys and values
  name: entity.name.tag.aml
  match: "^(?i)\\s*([a-z]+|[0-9]+|-|_)+\\s*:"
- comment: Nested key structure
  name: variable.parameter.aml
  match: "^\\s*(?i)(([a-z]+|[0-9]+|-|_)+\\.)+([a-z]+|[0-9]+|-|_)+\\s*:"
- comment: Nested key structure with an object block
  begin: "^(?i)\\s*{\\s*([a-z]+|[0-9]+|-|_|\\.)+\\s*}"
  beginCaptures:
    '0': {name: variable.parameter.aml}
  end: "^({}|(?={.+}))"
  endCaptures:
    '0': {name: variable.parameter.aml}
  patterns:
  - name: variable.parameter.aml
    match: "^(?i)\\s*([a-z]*|[0-9]*|-*|_*)+\\s*:"
- comment: Array of objects
  begin: "^(?i)\\s*\\[\\.*(([a-z]+|[0-9]+)+(-|_|\\.))*([a-z]+|[0-9]+)+\\s*\\]"
  beginCaptures:
    '0': {name: entity.name.function.aml}
  end: "^(\\[\\]|(?=\\[(?:\\.\\]).+\\]))"
  endCaptures:
    '0': {name: entity.name.function.aml}
  patterns:
  - include: $self
  - name: entity.name.function.aml
    comment: key-value pairs
    match: "^(?i)\\s*([a-z]*|[0-9]*|-*|_*)+\\s*:"
  - name: string.quoted.double.aml
    comment: Arrays of strings
    match: "^\\s*\\*.+"
  # - comment: Nested arrays
  #   begin: "^(?i)\\s*\\[\\.([a-z]+|[0-9]+)+(-|_)*([a-z]+|[0-9]+)*\\s*\\]"
  #   beginCaptures:
  #     '0': {name: storage.type.aml}
  #   end: "^\\[\\]"
  #   endCaptures:
  #     '0': {name: storage.type.aml}
- comment: Freeform arrays
  # name: storage.type.aml
  begin: "^(?i)\\s*\\[\\+*(([a-z]+|[0-9]+)+(-|_|\\.))*([a-z]+|[0-9]+)+\\s*\\]"
  beginCaptures:
    '0': {name: storage.type.aml}
  end: "^(\\[\\]|(?=\\[\\+.+\\]))"
  endCaptures:
    '0': {name: storage.type.aml}
  patterns:
   - include: $self
- comment: Multi-line values
  name: constant.language.aml
  match: "^:end"
- comment: Escape characters
  name: constant.character.escape.aml
  match: "(\\\\)(\\S)+"
- comment: Block comments
  name: comment.block.aml
  begin: ":skip"
  end: ":endskip"
- comment: Ignore comments
  name: comment.block.aml
  begin: "^:ignore"
  end: "^:endignore"
...